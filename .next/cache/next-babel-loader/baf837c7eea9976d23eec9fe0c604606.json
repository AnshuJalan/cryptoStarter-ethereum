{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Grid, Card } from 'semantic-ui-react';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\n\nvar CampaignShow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  function CampaignShow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CampaignShow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CampaignShow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    return _this;\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var items = [{\n        header: this.props.summary[4],\n        meta: 'Manager',\n        description: 'The creator and controller of the campaign.',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: this.props.summary[1],\n        meta: \"Campaign Balance (ether)\",\n        description: \"Total current balance available.\"\n      }, {\n        header: this.props.summary[0],\n        meta: \"Minimum Contribution (wei)\",\n        description: \"Minimum contribution if you want to be an approver.\"\n      }, {\n        header: this.props.summary[2],\n        meta: \"Requests\",\n        description: \"Total number of requests generated.\"\n      }, {\n        header: this.props.summary[3],\n        meta: \"Contributors\",\n        description: \"Total number of approvers for the campaign.\"\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Details\"), __jsx(Grid, null, __jsx(Grid.Column, {\n        width: 12\n      }, this.renderCards()), __jsx(Grid.Column, {\n        width: 4\n      }, __jsx(\"h3\", null, \"Contribute to the campaign!\"))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var campaign, summary;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              campaign = Campaign(props.query.address);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(campaign.methods.getSummary().call());\n\n            case 3:\n              summary = _context.sent;\n              return _context.abrupt(\"return\", {\n                summary: summary\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["C:/Users/AnshuJalan/Documents/Ethereum/Campaign/pages/campaigns/show.js"],"names":["React","Component","Layout","Grid","Card","Campaign","web3","CampaignShow","items","header","props","summary","meta","description","style","overflowWrap","renderCards","campaign","query","address","methods","getSummary","call"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;IAEMC,Y;;;;;;;;;;;;;;;;;;4DACM,E;;;;;;;kCAWK;AACT,UAAMC,KAAK,GAAG,CACV;AACIC,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmB,CAAnB,CADZ;AAEIC,QAAAA,IAAI,EAAE,SAFV;AAGIC,QAAAA,WAAW,EAAE,6CAHjB;AAIIC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AAJX,OADU,EAOV;AACIN,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmB,CAAnB,CADZ;AAEIC,QAAAA,IAAI,EAAE,0BAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OAPU,EAYV;AACIJ,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmB,CAAnB,CADZ;AAEIC,QAAAA,IAAI,EAAE,4BAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OAZU,EAiBV;AACIJ,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmB,CAAnB,CADZ;AAEIC,QAAAA,IAAI,EAAE,UAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OAjBU,EAsBV;AACIJ,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmB,CAAnB,CADZ;AAEIC,QAAAA,IAAI,EAAE,cAFV;AAGIC,QAAAA,WAAW,EAAE;AAHjB,OAtBU,CAAd;AA6BA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEL;AAAnB,QAAP;AACH;;;6BAEQ;AACL,aACI,MAAC,MAAD,QACI,qCADJ,EAEI,MAAC,IAAD,QACI,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACK,KAAKQ,WAAL,EADL,CADJ,EAII,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACI,gDADJ,CAJJ,CAFJ,CADJ;AAaH;;;oCAvD4BN,K;;;;;;AAEnBO,cAAAA,Q,GAAWZ,QAAQ,CAACK,KAAK,CAACQ,KAAN,CAAYC,OAAb,C;;+CACHF,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,E;;;AAAhBX,cAAAA,O;+CAEC;AAAEA,gBAAAA,OAAO,EAAPA;AAAF,e;;;;;;;;;;;;EATYV,S;;AA8D3B,eAAeM,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { Grid, Card } from 'semantic-ui-react';\r\nimport Campaign from '../../ethereum/campaign';\r\nimport web3 from '../../ethereum/web3';\r\n\r\nclass CampaignShow extends Component {\r\n    state = {\r\n    }\r\n\r\n    static async getInitialProps(props){\r\n\r\n        const campaign = Campaign(props.query.address);\r\n        const summary = await campaign.methods.getSummary().call();\r\n\r\n        return { summary };\r\n    }\r\n\r\n    renderCards(){\r\n        const items = [\r\n            {\r\n                header: this.props.summary[4],\r\n                meta: 'Manager',\r\n                description: 'The creator and controller of the campaign.',\r\n                style: { overflowWrap: 'break-word' }\r\n            },\r\n            {\r\n                header: this.props.summary[1],\r\n                meta: \"Campaign Balance (ether)\",\r\n                description: \"Total current balance available.\",\r\n            },\r\n            {\r\n                header: this.props.summary[0],\r\n                meta: \"Minimum Contribution (wei)\",\r\n                description: \"Minimum contribution if you want to be an approver.\",\r\n            },\r\n            {\r\n                header: this.props.summary[2],\r\n                meta: \"Requests\",\r\n                description: \"Total number of requests generated.\"\r\n            },\r\n            {\r\n                header: this.props.summary[3],\r\n                meta: \"Contributors\",\r\n                description: \"Total number of approvers for the campaign.\"\r\n            }\r\n        ];\r\n\r\n        return <Card.Group items={items} />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <h3>Campaign Details</h3>\r\n                <Grid>\r\n                    <Grid.Column width={12}>\r\n                        {this.renderCards()}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <h3>Contribute to the campaign!</h3>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}