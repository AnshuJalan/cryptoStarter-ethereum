{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Grid, Card, Input, Form, Message, Button } from 'semantic-ui-react';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\nimport { Router, Link } from '../../routes';\n\nclass CampaignShow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      errorMessage: '',\n      contribution: '',\n      isLoading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n\n      try {\n        //Get accounts\n        let accounts = await web3.eth.getAccounts(); //Contribute\n\n        await this.props.campaign.methods.contribute().send({\n          value: web3.utils.toWei(this.state.contribution, \"ether\"),\n          from: accounts[0]\n        });\n      } catch (error) {\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n\n      this.setState({\n        isLoading: false\n      });\n      Router.replaceRoute('/campaigns/' + this.props.campaign.options.address);\n    });\n\n    _defineProperty(this, \"clearError\", () => {\n      this.setState({\n        errorMessage: ''\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      summary,\n      campaign\n    };\n  }\n\n  renderCards() {\n    const items = [{\n      header: this.props.summary[4],\n      meta: 'Manager',\n      description: 'The creator and controller of the campaign.',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: web3.utils.fromWei(this.props.summary[1], \"ether\"),\n      meta: \"Campaign Balance (ether)\",\n      description: \"Total current balance available.\"\n    }, {\n      header: this.props.summary[0],\n      meta: \"Minimum Contribution (wei)\",\n      description: \"Minimum contribution if you want to be an approver.\"\n    }, {\n      header: this.props.summary[2],\n      meta: \"Requests\",\n      description: \"Total number of requests generated.\"\n    }, {\n      header: this.props.summary[3],\n      meta: \"Contributors\",\n      description: \"Total number of approvers for the campaign.\"\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Details\"), __jsx(Grid, null, __jsx(Grid.Column, {\n      width: 10\n    }, this.renderCards()), __jsx(Grid.Column, {\n      width: 6\n    }, __jsx(\"h3\", null, \"Contribute to the campaign!\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Contribution\"), __jsx(Input, {\n      label: \"Ether\",\n      labelPosition: \"right\",\n      value: this.state.contribution,\n      onChange: event => {\n        this.setState({\n          contribution: event.target.value\n        });\n      }\n    })), __jsx(Button, {\n      loading: this.state.isLoading,\n      primary: true\n    }, \"Contribute\"), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage,\n      onDismiss: this.clearError\n    })))), __jsx(Link, {\n      to: '/campaigns/' + this.props.campaign.options.address + '/requests'\n    }, __jsx(Button, {\n      primary: true\n    }, \"View Requests\")));\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["C:/Users/AnshuJalan/Documents/Ethereum/Campaign/pages/campaigns/show.js"],"names":["React","Component","Layout","Grid","Card","Input","Form","Message","Button","Campaign","web3","Router","Link","CampaignShow","errorMessage","contribution","isLoading","event","preventDefault","setState","accounts","eth","getAccounts","props","campaign","methods","contribute","send","value","utils","toWei","state","from","error","message","replaceRoute","options","address","getInitialProps","query","summary","getSummary","call","renderCards","items","header","meta","description","style","overflowWrap","fromWei","render","onSubmit","target","clearError"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { Grid, Card, Input, Form, Message, Button } from 'semantic-ui-react';\r\nimport Campaign from '../../ethereum/campaign';\r\nimport web3 from '../../ethereum/web3';\r\nimport { Router, Link } from '../../routes'; \r\n\r\nclass CampaignShow extends Component {\r\n    state = {\r\n        errorMessage: '',\r\n        contribution: '',\r\n        isLoading: false\r\n    }\r\n\r\n    static async getInitialProps(props) {\r\n\r\n        const campaign = Campaign(props.query.address);\r\n        const summary = await campaign.methods.getSummary().call();\r\n\r\n        return { summary, campaign };\r\n    }\r\n\r\n    onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        try{\r\n            //Get accounts\r\n            let accounts = await web3.eth.getAccounts();\r\n\r\n            //Contribute\r\n            await this.props.campaign.methods.contribute().send({\r\n                value: web3.utils.toWei(this.state.contribution, \"ether\"),\r\n                from: accounts[0]\r\n            });\r\n\r\n        }catch(error){\r\n            this.setState({ errorMessage: error.message });\r\n        }\r\n\r\n        this.setState({ isLoading: false});\r\n        Router.replaceRoute('/campaigns/' + this.props.campaign.options.address);\r\n    }\r\n\r\n    renderCards() {\r\n        const items = [\r\n            {\r\n                header: this.props.summary[4],\r\n                meta: 'Manager',\r\n                description: 'The creator and controller of the campaign.',\r\n                style: { overflowWrap: 'break-word' }\r\n            },\r\n            {\r\n                header: web3.utils.fromWei(this.props.summary[1], \"ether\"),\r\n                meta: \"Campaign Balance (ether)\",\r\n                description: \"Total current balance available.\",\r\n            },\r\n            {\r\n                header: this.props.summary[0],\r\n                meta: \"Minimum Contribution (wei)\",\r\n                description: \"Minimum contribution if you want to be an approver.\",\r\n            },\r\n            {\r\n                header: this.props.summary[2],\r\n                meta: \"Requests\",\r\n                description: \"Total number of requests generated.\"\r\n            },\r\n            {\r\n                header: this.props.summary[3],\r\n                meta: \"Contributors\",\r\n                description: \"Total number of approvers for the campaign.\"\r\n            }\r\n        ];\r\n\r\n        return <Card.Group items={items} /> \r\n    }\r\n\r\n    clearError = () => {\r\n        this.setState({ errorMessage: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <h3>Campaign Details</h3>\r\n                <Grid>\r\n                    <Grid.Column width={10}>\r\n                        {this.renderCards()}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6}>\r\n                        <h3>Contribute to the campaign!</h3>\r\n                        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n                            <Form.Field>\r\n                                <label>Contribution</label>\r\n                                <Input\r\n                                    label=\"Ether\"\r\n                                    labelPosition=\"right\"\r\n                                    value={this.state.contribution}\r\n                                    onChange={event => { this.setState({ contribution: event.target.value }) }}\r\n                                />\r\n                            </Form.Field>\r\n                            <Button loading={this.state.isLoading} primary>Contribute</Button>\r\n                            <Message error header=\"Oops!\" content={this.state.errorMessage} onDismiss={this.clearError} />\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n                <Link to={'/campaigns/' + this.props.campaign.options.address + '/requests'}>\r\n                    <Button primary>View Requests</Button>\r\n                </Link>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}