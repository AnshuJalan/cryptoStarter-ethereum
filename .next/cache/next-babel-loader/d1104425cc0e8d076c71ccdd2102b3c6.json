{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../../components/Layout';\nimport { Input, Form, Grid, Button, Message } from 'semantic-ui-react';\nimport web3 from '../../../ethereum/web3';\nimport Campaign from '../../../ethereum/campaign';\nimport { Router } from '../../../routes';\n\nclass RequestNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      description: '',\n      value: '',\n      recipient: '',\n      errorMessage: '',\n      isLoading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async () => {\n      //Get the campaign contract\n      const campaign = Campaign(this.props.address);\n      this.setState({\n        isLoading: true\n      });\n\n      try {\n        //Get address\n        let accounts = await web3.eth.getAccounts(); //Send request\n\n        await campaign.methods.createRequest(this.state.description, this.state.value, this.state.recipient).send({\n          from: accounts[0]\n        });\n      } catch (error) {\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n\n      this.setState({\n        isLoading: false\n      });\n      Router.pushRoute('/campaigns/' + this.props.address);\n    });\n\n    _defineProperty(this, \"clearError\", () => {\n      this.setState({\n        errorMessage: ''\n      });\n    });\n  }\n\n  static async getInitalProps(props) {\n    const {\n      address\n    } = props.query.address;\n    return {\n      address\n    };\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Create a Request\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Grid, null, __jsx(Grid.Column, {\n      width: 6\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Description\"), __jsx(Input, {\n      value: this.state.description,\n      onChange: event => {\n        this.setState({\n          description: event.target.value\n        });\n      }\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Value\"), __jsx(Input, {\n      label: \"Wei\",\n      labelPosition: \"right\",\n      value: this.state.value,\n      onChange: event => {\n        this.setState({\n          value: event.target.value\n        });\n      }\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Recipient\"), __jsx(Input, {\n      value: this.state.recipient,\n      onChange: event => {\n        this.setState({\n          recipient: event.target.value\n        });\n      }\n    })), __jsx(Button, {\n      loading: this.state.isLoading,\n      primary: true\n    }, \"Create\"))), __jsx(Message, {\n      error: true,\n      header: \"Oops\",\n      content: this.state.errorMessage,\n      onDismiss: this.clearError\n    })));\n  }\n\n}\n\nexport default RequestNew;","map":{"version":3,"sources":["C:/Users/AnshuJalan/Documents/Ethereum/Campaign/pages/campaigns/requests/new.js"],"names":["React","Component","Layout","Input","Form","Grid","Button","Message","web3","Campaign","Router","RequestNew","description","value","recipient","errorMessage","isLoading","campaign","props","address","setState","accounts","eth","getAccounts","methods","createRequest","state","send","from","error","message","pushRoute","getInitalProps","query","render","onSubmit","event","target","clearError"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../../../components/Layout'\r\nimport { Input, Form, Grid, Button, Message } from 'semantic-ui-react';\r\nimport web3 from '../../../ethereum/web3';\r\nimport Campaign from '../../../ethereum/campaign';\r\nimport { Router } from '../../../routes';\r\n\r\nclass RequestNew extends Component {\r\n    state = {\r\n        description: '',\r\n        value: '',\r\n        recipient: '',\r\n        errorMessage: '',\r\n        isLoading: false\r\n    }\r\n\r\n    static async getInitalProps(props) {\r\n        const { address } = props.query.address;\r\n\r\n        return { address };\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        //Get the campaign contract\r\n        const campaign = Campaign(this.props.address);\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        try {\r\n            //Get address\r\n            let accounts = await web3.eth.getAccounts();\r\n\r\n            //Send request\r\n            await campaign.methods.createRequest(this.state.description, this.state.value, this.state.recipient).send(\r\n                { from: accounts[0] }\r\n            );\r\n\r\n        } catch (error) {\r\n            this.setState({ errorMessage: error.message });\r\n        }\r\n\r\n        this.setState({ isLoading: false });\r\n        Router.pushRoute('/campaigns/' + this.props.address);\r\n        \r\n    }\r\n\r\n    clearError = () => {\r\n        this.setState({ errorMessage: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <h3>Create a Request</h3>\r\n                <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n                    <Grid>\r\n                        <Grid.Column width={6}>\r\n                            <Form.Field>\r\n                                <label>Description</label>\r\n                                <Input value={this.state.description} onChange={event => { this.setState({ description: event.target.value }) }} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Value</label>\r\n                                <Input\r\n                                    label=\"Wei\"\r\n                                    labelPosition=\"right\"\r\n                                    value={this.state.value}\r\n                                    onChange={event => { this.setState({ value: event.target.value }) }} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Recipient</label>\r\n                                <Input value={this.state.recipient} onChange={event => { this.setState({ recipient: event.target.value }) }} />\r\n                            </Form.Field>\r\n                            <Button loading={this.state.isLoading} primary>Create</Button>\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                    <Message error header=\"Oops\" content={this.state.errorMessage} onDismiss={this.clearError} />\r\n                </Form>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RequestNew;"]},"metadata":{},"sourceType":"module"}