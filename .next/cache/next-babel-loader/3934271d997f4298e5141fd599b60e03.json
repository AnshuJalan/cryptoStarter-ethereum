{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Grid, Card, Input } from 'semantic-ui-react';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\n\nclass CampaignShow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      errorMessage: ''\n    });\n  }\n\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      summary\n    };\n  }\n\n  renderCards() {\n    const items = [{\n      header: this.props.summary[4],\n      meta: 'Manager',\n      description: 'The creator and controller of the campaign.',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: this.props.summary[1],\n      meta: \"Campaign Balance (ether)\",\n      description: \"Total current balance available.\"\n    }, {\n      header: this.props.summary[0],\n      meta: \"Minimum Contribution (wei)\",\n      description: \"Minimum contribution if you want to be an approver.\"\n    }, {\n      header: this.props.summary[2],\n      meta: \"Requests\",\n      description: \"Total number of requests generated.\"\n    }, {\n      header: this.props.summary[3],\n      meta: \"Contributors\",\n      description: \"Total number of approvers for the campaign.\"\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Details\"), __jsx(Grid, null, __jsx(Grid.Column, {\n      width: 12\n    }, this.renderCards()), __jsx(Grid.Column, {\n      width: 4\n    }, __jsx(\"h3\", null, \"Contribute to the campaign!\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Contribution\"), __jsx(Input, {\n      label: \"Wei\",\n      labelPosition: \"right\",\n      value: this.state.minimumContrib,\n      onChange: event => {\n        this.setState({\n          minimumContrib: event.target.value\n        });\n      }\n    })), __jsx(Button, {\n      loading: this.state.isLoading,\n      primary: true\n    }, \"Create Campaign\"), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage,\n      onDismiss: this.clearError\n    })))));\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["C:/Users/AnshuJalan/Documents/Ethereum/Campaign/pages/campaigns/show.js"],"names":["React","Component","Layout","Grid","Card","Input","Campaign","web3","CampaignShow","errorMessage","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","renderCards","items","header","meta","description","style","overflowWrap","render","onSubmit","state","minimumContrib","event","setState","target","value","isLoading","clearError"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { Grid, Card, Input } from 'semantic-ui-react';\r\nimport Campaign from '../../ethereum/campaign';\r\nimport web3 from '../../ethereum/web3';\r\n\r\nclass CampaignShow extends Component {\r\n    state = {\r\n        errorMessage: ''\r\n    }\r\n\r\n    static async getInitialProps(props) {\r\n\r\n        const campaign = Campaign(props.query.address);\r\n        const summary = await campaign.methods.getSummary().call();\r\n\r\n        return { summary };\r\n    }\r\n\r\n    renderCards() {\r\n        const items = [\r\n            {\r\n                header: this.props.summary[4],\r\n                meta: 'Manager',\r\n                description: 'The creator and controller of the campaign.',\r\n                style: { overflowWrap: 'break-word' }\r\n            },\r\n            {\r\n                header: this.props.summary[1],\r\n                meta: \"Campaign Balance (ether)\",\r\n                description: \"Total current balance available.\",\r\n            },\r\n            {\r\n                header: this.props.summary[0],\r\n                meta: \"Minimum Contribution (wei)\",\r\n                description: \"Minimum contribution if you want to be an approver.\",\r\n            },\r\n            {\r\n                header: this.props.summary[2],\r\n                meta: \"Requests\",\r\n                description: \"Total number of requests generated.\"\r\n            },\r\n            {\r\n                header: this.props.summary[3],\r\n                meta: \"Contributors\",\r\n                description: \"Total number of approvers for the campaign.\"\r\n            }\r\n        ];\r\n\r\n        return <Card.Group items={items} />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <h3>Campaign Details</h3>\r\n                <Grid>\r\n                    <Grid.Column width={12}>\r\n                        {this.renderCards()}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <h3>Contribute to the campaign!</h3>\r\n                        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n                            <Form.Field>\r\n                                <label>Contribution</label>\r\n                                <Input\r\n                                    label=\"Wei\"\r\n                                    labelPosition=\"right\"\r\n                                    value={this.state.minimumContrib}\r\n                                    onChange={event => { this.setState({ minimumContrib: event.target.value }) }}\r\n                                />\r\n                            </Form.Field>\r\n                            <Button loading={this.state.isLoading} primary>Create Campaign</Button>\r\n                            <Message error header=\"Oops!\" content={this.state.errorMessage} onDismiss={this.clearError} />\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}